{"version":3,"sources":["n1-main/m1-ui/common/Imput/Input.module.css","n1-main/m1-ui/common/Button/Button.module.css","n1-main/m1-ui/common/MyLink/MyLink.module.css","n2-features/f1-auth/a5-profile/p1-ui/ProfilePage.module.css","n2-features/f1-auth/a3-recovery/r1-ui/RecoveryPasswordPage.module.css","n2-features/f1-auth/a2-registration/r1-ui/RegistrationPage.module.css","n2-features/f1-auth/a4-newPass/n1-ui/NewPasswordPage.module.css","n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/common/Imput/Input.tsx","n1-main/m1-ui/common/Button/Button.tsx","n1-main/m1-ui/common/MyLink/MyLink.tsx","n2-features/f1-auth/a1-loginization/l1-ui/SigninPage.tsx","n2-features/f1-auth/a5-profile/p1-ui/ProfilePage.tsx","n2-features/f1-auth/a3-recovery/r1-ui/RecoveryPasswordPage.tsx","n2-features/f1-auth/a2-registration/r1-ui/RegistrationPage.tsx","n2-features/f1-auth/a4-newPass/n1-ui/NewPasswordPage.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/Main.tsx","n2-features/f1-auth/a1-loginization/l2-bll/loginReducer.ts","n2-features/f1-auth/a2-registration/r2-bll/regReducer.ts","n2-features/f1-auth/a3-recovery/r2-bll/recoveryPassReducer.ts","n2-features/f1-auth/a4-newPass/n2-bll/newPassReducer.ts","n2-features/f1-auth/a5-profile/p2-bll/profileReducer.ts","n2-features/f1-auth/authReducer.ts","n1-main/m2-bll/store.ts","n1-main/m1-ui/App.tsx","serviceWorker.ts","index.tsx","n2-features/f1-auth/a1-loginization/l1-ui/SigninPage.module.css"],"names":["module","exports","Input","props","type","className","style","inputStyle","placeholder","Button","wrapper","name","MyLink","linkInHeaderWrapper","to","text","SignInPage","largeText","linkInPageWrapper","RECOVERY_PAGE","checkboxBlockWrapper","smallText","REGISTRATION_PAGE","ProfilePage","RecoveryPasswordPage","RegistrationPage","NewPasswordPage","Routes","path","render","Header","Main","initialState","loginReducer","state","registrationReducer","recoveryPassReducer","newPassReducer","profileReducer","authReducer","combineReducers","rootReducer","store","createStore","applyMiddleware","thunk","Wrapper","styled","div","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.28572a83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputStyle\":\"Input_inputStyle__EV2PK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Button_wrapper__1fdST\",\"stripes\":\"Button_stripes__1GX2a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkInHeaderWrapper\":\"MyLink_linkInHeaderWrapper__2NkKu index_linkInHeader__1uCwg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"largeText\":\"ProfilePage_largeText__HZaVd index_largeText__3Syml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"largeText\":\"RecoveryPasswordPage_largeText__3IkTv index_largeText__3Syml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"largeText\":\"RegistrationPage_largeText__3bxWS index_largeText__3Syml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"largeText\":\"NewPasswordPage_largeText__cj7l5 index_largeText__3Syml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__VsJQr\"};","import React from \"react\";\r\nimport style from './Input.module.css'\r\n\r\ntype OwnPropsType = {\r\n    placeholder?: string\r\n    type?: string\r\n}\r\ntype PropsType = OwnPropsType\r\nconst Input: React.FC<PropsType> = (props) => {\r\n    if (props.type === 'checkbox') {\r\n        return (\r\n            <input type=\"checkbox\"/>\r\n        )\r\n    }\r\n    return (\r\n        <div className={style.inputStyle}>\r\n            <input placeholder={props.placeholder} type={props.type}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Input","import React from \"react\";\r\nimport style from './Button.module.css'\r\n\r\ntype OwnPropsType = {\r\n    name: string\r\n}\r\ntype PropsType = OwnPropsType\r\nconst Button: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            {props.name}\r\n        </div>\r\n    )\r\n}\r\nexport default Button","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './MyLink.module.css'\r\n\r\ntype OwnPropsType = {\r\n    to: string\r\n    text: string\r\n}\r\ntype PropsType = OwnPropsType\r\nconst MyLink: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <span className={style.linkInHeaderWrapper}>\r\n            <NavLink to={props.to}>{props.text}</NavLink>\r\n        </span>\r\n    )\r\n}\r\nexport default MyLink","import React from \"react\";\r\nimport style from './SigninPage.module.css'\r\nimport Button from \"../../../../n1-main/m1-ui/common/Button/Button\";\r\nimport Input from \"../../../../n1-main/m1-ui/common/Imput/Input\";\r\nimport MyLink from \"../../../../n1-main/m1-ui/common/MyLink/MyLink\";\r\nimport {RECOVERY_PAGE, REGISTRATION_PAGE} from \"../../../../n1-main/m1-ui/routes/Routes\";\r\n\r\nconst SignInPage: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <div className={style.largeText}>\r\n                Sign-in page\r\n            </div>\r\n            <Input placeholder={'Введите логин'}/>\r\n            <Input placeholder={'Введите пароль'} type={'password'}/>\r\n            <div className={style.linkInPageWrapper}>\r\n                <MyLink to={RECOVERY_PAGE} text={'Забыли пароль?'}/>\r\n            </div>\r\n            <div className={style.checkboxBlockWrapper}>\r\n                <div className={style.smallText}>\r\n                    Запомнить меня\r\n                </div>\r\n                <Input type={'checkbox'}/>\r\n            </div>\r\n            <Button name={'войти'}/>\r\n            <div className={style.linkInPageWrapper}>\r\n                <MyLink to={REGISTRATION_PAGE} text={'Зарегистрироваться'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SignInPage","import React from \"react\";\r\nimport style from './ProfilePage.module.css'\r\n\r\nconst ProfilePage: React.FC = () => {\r\n    return (\r\n        <div className={style.largeText}>\r\n            Profile Page\r\n        </div>\r\n    )\r\n}\r\nexport default ProfilePage","import React from \"react\";\r\nimport style from './RecoveryPasswordPage.module.css'\r\n\r\nconst RecoveryPasswordPage: React.FC = () => {\r\n    return (\r\n        <div className={style.largeText}>\r\n            Recovery password page\r\n        </div>\r\n    )\r\n}\r\nexport default RecoveryPasswordPage","import React from \"react\";\r\nimport style from './RegistrationPage.module.css'\r\n\r\nconst RegistrationPage: React.FC = () => {\r\n    return (\r\n        <div className={style.largeText}>\r\n            Registration page\r\n        </div>\r\n    )\r\n}\r\nexport default RegistrationPage","import React from \"react\";\r\nimport style from './NewPasswordPage.module.css'\r\n\r\nconst NewPasswordPage: React.FC = () => {\r\n    return (\r\n        <div className={style.largeText}>\r\n            New password page\r\n        </div>\r\n    )\r\n}\r\nexport default NewPasswordPage","import {Route} from \"react-router\";\r\nimport Input from \"../common/Imput/Input\";\r\nimport Button from \"../common/Button/Button\";\r\nimport React from \"react\";\r\nimport SignInPage from \"../../../n2-features/f1-auth/a1-loginization/l1-ui/SigninPage\";\r\nimport ProfilePage from \"../../../n2-features/f1-auth/a5-profile/p1-ui/ProfilePage\";\r\nimport RecoveryPasswordPage from \"../../../n2-features/f1-auth/a3-recovery/r1-ui/RecoveryPasswordPage\";\r\nimport RegistrationPage from \"../../../n2-features/f1-auth/a2-registration/r1-ui/RegistrationPage\";\r\nimport NewPasswordPage from \"../../../n2-features/f1-auth/a4-newPass/n1-ui/NewPasswordPage\";\r\n\r\nexport const INPUT_PATH = '/input'\r\nexport const BUTTON_PATH = '/button'\r\nexport const SIGN_IN_PAGE = '/sign_in'\r\nexport const REGISTRATION_PAGE = '/registration'\r\nexport const RECOVERY_PAGE = '/recovery_password'\r\nexport const NEW_PASSWORD_PAGE = '/new_password'\r\nexport const PROFILE_PAGE = '/profile'\r\n\r\nexport const Routes: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Route path={INPUT_PATH} render={() => <Input placeholder={'Введите текст'}/>}/>\r\n            <Route path={BUTTON_PATH} render={() => <Button name={'Click me!'}/>}/>\r\n\r\n            <Route path={SIGN_IN_PAGE} render={() => <SignInPage/>}/>\r\n            <Route path={REGISTRATION_PAGE} render={() => <RegistrationPage/>}/>\r\n            <Route path={RECOVERY_PAGE} render={() => <RecoveryPasswordPage/>}/>\r\n            <Route path={NEW_PASSWORD_PAGE} render={() => <NewPasswordPage/>}/>\r\n            <Route path={PROFILE_PAGE} render={() => <ProfilePage/>}/>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport style from './Header.module.css'\r\nimport {\r\n    BUTTON_PATH,\r\n    INPUT_PATH,\r\n    NEW_PASSWORD_PAGE, PROFILE_PAGE,\r\n    RECOVERY_PAGE,\r\n    REGISTRATION_PAGE, SIGN_IN_PAGE\r\n} from \"../routes/Routes\";\r\nimport MyLink from \"../common/MyLink/MyLink\";\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <MyLink to={BUTTON_PATH} text={'button'}/>\r\n            <MyLink to={INPUT_PATH} text={'input'}/>\r\n            <MyLink to={SIGN_IN_PAGE} text={'sign-in'}/>\r\n            <MyLink to={REGISTRATION_PAGE} text={'registration'}/>\r\n            <MyLink to={NEW_PASSWORD_PAGE} text={'new password'}/>\r\n            <MyLink to={RECOVERY_PAGE} text={'recovery password'}/>\r\n            <MyLink to={PROFILE_PAGE} text={'profile'}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Header","import React from \"react\";\r\nimport {Routes} from \"./routes/Routes\";\r\nimport Header from \"./header/Header\";\r\n\r\nconst Main: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Routes/>\r\n        </>\r\n    )\r\n}\r\nexport default Main","type InitialStateType = typeof initialState\r\nconst initialState = {}\r\nconst loginReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    return state\r\n}\r\nexport default loginReducer","type InitialStateType = {}\r\nconst initialState: InitialStateType = {}\r\nconst registrationReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    return state\r\n}\r\nexport default registrationReducer","type InitialStateType = {}\r\nconst initialState: InitialStateType = {}\r\nconst recoveryPassReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    return state\r\n}\r\nexport default recoveryPassReducer","type InitialStateType = {}\r\nconst initialState: InitialStateType = {}\r\nconst newPassReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    return state\r\n}\r\nexport default newPassReducer","type InitialStateType = {}\r\nconst initialState: InitialStateType = {}\r\nconst profileReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    return state\r\n}\r\nexport default profileReducer","import {combineReducers} from \"redux\";\r\nimport loginReducer from \"./a1-loginization/l2-bll/loginReducer\";\r\nimport registrationReducer from \"./a2-registration/r2-bll/regReducer\";\r\nimport recoveryPassReducer from \"./a3-recovery/r2-bll/recoveryPassReducer\";\r\nimport newPassReducer from \"./a4-newPass/n2-bll/newPassReducer\";\r\nimport profileReducer from \"./a5-profile/p2-bll/profileReducer\";\r\n\r\nconst authReducer = combineReducers({\r\n    loginReducer: loginReducer,\r\n    registrationReducer: registrationReducer,\r\n    recoveryPassReducer: recoveryPassReducer,\r\n    newPassReducer: newPassReducer,\r\n    profileReducer: profileReducer\r\n})\r\nexport default authReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport authReducer from \"../../n2-features/f1-auth/authReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    authReducer: authReducer\r\n})\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\nexport default store","import React from 'react';\nimport Main from \"./Main\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"../m2-bll/store\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  text-align: center;\n`\nconst App = () => {\n    return (\n        <Wrapper>\n            <HashRouter>\n                <Provider store={store}>\n                    <Main/>\n                </Provider>\n            </HashRouter>\n        </Wrapper>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"smallText\":\"SigninPage_smallText__2Y_ZH index_smallText__IdUG9\",\"checkboxBlockWrapper\":\"SigninPage_checkboxBlockWrapper__1naeU\",\"linkInPageWrapper\":\"SigninPage_linkInPageWrapper__2OekI index_linkInPage__2Jfgz\",\"largeText\":\"SigninPage_largeText__3sl6n index_largeText__3Syml\"};"],"sourceRoot":""}