{"version":3,"sources":["n1-main/m1-ui/common/Input.tsx","n1-main/m1-ui/common/Button.tsx","n1-main/m1-ui/common/Text.tsx","n2-features/f1-auth/a1-loginization/l1-ui/Login.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/Main.tsx","n2-features/f1-auth/a1-loginization/l2-bll/loginReducer.ts","n2-features/f1-auth/a2-registration/r2-bll/regReducer.ts","n2-features/f1-auth/a3-recovery/r2-bll/recoveryPassReducer.ts","n2-features/f1-auth/a4-newPass/n2-bll/newPassReducer.ts","n2-features/f1-auth/a5-profile/p2-bll/profileReducer.ts","n2-features/f1-auth/authReducer.ts","n1-main/m2-bll/store.ts","n1-main/m1-ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["Wrapper","styled","div","Input","placeholder","Button","Text","Login","Routes","path","render","WrapperBlock","Header","to","Main","initialState","loginReducer","state","registrationReducer","recoveryPassReducer","newPassReducer","profileReducer","authReducer","combineReducers","rootReducer","store","createStore","applyMiddleware","thunk","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6lBAGA,IAAMA,EAAUC,IAAOC,IAAV,KAsBEC,EAPD,WACV,OACI,kBAACH,EAAD,KACI,2BAAOI,YAAY,gF,o5BClB/B,IAAMJ,EAAUC,IAAOC,IAAV,KAoCEG,EAPA,WACX,OACI,kBAAC,EAAD,mB,4PC/BR,IAAML,EAAUC,IAAOC,IAAV,KAmBEI,EATF,WACT,OACI,kBAAC,EAAD,4OCFOC,EATD,WACV,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGCC,EAAmB,WAC5B,OACI,oCACI,kBAAC,IAAD,CAAOC,KARO,SAQWC,OAAQ,kBAAM,kBAAC,EAAD,SACvC,kBAAC,IAAD,CAAOD,KARQ,UAQWC,OAAQ,kBAAM,kBAAC,EAAD,SACxC,kBAAC,IAAD,CAAOD,KARM,QAQWC,OAAQ,kBAAM,kBAAC,EAAD,SAEtC,kBAAC,IAAD,CAAOD,KATO,SASWC,OAAQ,kBAAM,kBAAC,EAAD,W,2fCdnD,IAAMC,EAAeV,IAAOC,IAAV,KAmCHU,EAVA,WACX,OACI,kBAACD,EAAD,KACI,8BAAM,kBAAC,IAAD,CAASE,GDzBA,WCyBT,WACN,8BAAM,kBAAC,IAAD,CAASA,GD3BD,UC2BR,UACN,8BAAM,kBAAC,IAAD,CAASA,GD1BF,SC0BP,SACN,8BAAM,kBAAC,IAAD,CAASA,GD1BD,UC0BR,aCxBHC,EARQ,WACnB,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,uBCPNC,EAAiC,GAIxBC,EAHM,WAA4E,IAA3EC,EAA0E,uDAAhDF,EAAgD,iCAC5F,OAAOE,GCFLF,EAAiC,GAIxBG,EAHa,WAA4E,IAA3ED,EAA0E,uDAAhDF,EAAgD,iCACnG,OAAOE,GCFLF,EAAiC,GAIxBI,EAHa,WAA4E,IAA3EF,EAA0E,uDAAhDF,EAAgD,iCACnG,OAAOE,GCFLF,EAAiC,GAIxBK,EAHQ,WAA4E,IAA3EH,EAA0E,uDAAhDF,EAAgD,iCAC9F,OAAOE,GCFLF,EAAiC,GAIxBM,EAHQ,WAA4E,IAA3EJ,EAA0E,uDAAhDF,EAAgD,iCAC9F,OAAOE,GCWIK,EAPKC,YAAgB,CAChCP,aAAcA,EACdE,oBAAqBA,EACrBC,oBAAqBA,EACrBC,eAAgBA,EAChBC,eAAgBA,ICRdG,EAAcD,YAAgB,CAChCD,YAAaA,IAKFG,EADDC,YAAYF,EAAaG,YAAgBC,M,8FCFvD,IAAM5B,EAAUC,IAAOC,IAAV,KAeE2B,EAZH,WACR,OACI,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUJ,MAAOA,GACb,kBAAC,EAAD,UCHAK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASzB,OACP,kBAAC,IAAM0B,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.eac274a6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n    input {\r\n      font-family: 'Poiret One', cursive;\r\n      font-size: 20px;\r\n      font-weight: bold;\r\n      outline: none;\r\n      margin: 5px;\r\n      padding: 5px;\r\n      border: 2px solid #015668;\r\n      border-bottom-width: 4px;\r\n      background: rgba(255,255,255,1);\r\n    }\r\n  \r\n`\r\n\r\nconst Input = () => {\r\n    return (\r\n        <Wrapper>\r\n            <input placeholder='Введите текст'/>\r\n        </Wrapper>\r\n    )\r\n}\r\nexport default Input","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  text-decoration: none;\r\n  outline: none;\r\n  display: inline-block;\r\n  margin: 5px;\r\n  padding: 5px 15px;\r\n  overflow: hidden;\r\n  border: 2px solid;\r\n  border-bottom-width: 4px;\r\n  font-family: 'Poiret One', cursive;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  letter-spacing: 2px;\r\n  color: #015668;\r\n  background: rgba(255,255,255,1);\r\n  transition: color .3s, background .5s;\r\n  :hover {\r\n      cursor: pointer;\r\n      animation: stripes 1s infinite linear;\r\n      background: linear-gradient(45deg, #fff1cf 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 50%, \r\n                  #fff1cf 50%, #fff1cf 75%, rgba(255,255,255,1) 75%, rgba(255,255,255,1));\r\n      background-size: 10px 10px;\r\n      color: #015668;\r\n  }\r\n  @keyframes stripes {\r\n      0% {background-position: 0 0;}\r\n      100% {background-position: 50px 0;}\r\n  }\r\n`\r\nconst Button = () => {\r\n    return (\r\n        <Wrapper>\r\n            Click Me!\r\n        </Wrapper>\r\n    )\r\n}\r\nexport default Button","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 50%;\r\n  text-align: center;\r\n  margin: 0 auto;\r\n  font-family: 'Poiret One', cursive;\r\n  font-weight: bold;\r\n  font-size: 30px;\r\n  letter-spacing: 2px;\r\n  color: #263f44;\r\n`\r\nconst Text = () => {\r\n    return (\r\n        <Wrapper>\r\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consectetur earum ipsa itaque iusto laudantium\r\n            nisi quae quaerat veniam, vitae? Deserunt fuga itaque laudantium optio provident vitae? Animi cumque\r\n            repellat temporibus?\r\n        </Wrapper>\r\n    )\r\n}\r\nexport default Text","import React from \"react\";\r\nimport Button from \"../../../../n1-main/m1-ui/common/Button\";\r\nimport Input from \"../../../../n1-main/m1-ui/common/Input\";\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div>\r\n            <Input/>\r\n            <Input/>\r\n            <Button/>\r\n        </div>\r\n    )\r\n}\r\nexport default Login","import {Route} from \"react-router\";\r\nimport Input from \"../common/Input\";\r\nimport Button from \"../common/Button\";\r\nimport Text from \"../common/Text\";\r\nimport React from \"react\";\r\nimport Login from \"../../../n2-features/f1-auth/a1-loginization/l1-ui/Login\";\r\n\r\nexport const INPUT_PATH = '/input'\r\nexport const BUTTON_PATH = '/button'\r\nexport const TEXT_PATH = '/text'\r\nexport const LOGIN_PAGE = '/login'\r\n\r\nexport const Routes: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Route path={INPUT_PATH} render={() => <Input/>}/>\r\n            <Route path={BUTTON_PATH} render={() => <Button/>}/>\r\n            <Route path={TEXT_PATH} render={() => <Text/>}/>\r\n\r\n            <Route path={LOGIN_PAGE} render={() => <Login/>}/>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {BUTTON_PATH, INPUT_PATH, LOGIN_PAGE, TEXT_PATH} from \"../routes/Routes\";\r\n\r\nconst WrapperBlock = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: #263f44;\r\n  display:flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  margin-bottom: 50px;\r\n  span {\r\n    padding-right: 50px;\r\n    a {\r\n      font-family: 'Great Vibes', cursive;\r\n      font-size: 40px;\r\n      text-decoration: none;\r\n      color: #fff1cf;\r\n      :hover {\r\n        color: #ffd369;\r\n      }\r\n    }\r\n    :hover {\r\n    cursor: pointer;\r\n    }\r\n  }\r\n`\r\n\r\nconst Header = () => {\r\n    return (\r\n        <WrapperBlock>\r\n            <span><NavLink to={BUTTON_PATH}>button</NavLink></span>\r\n            <span><NavLink to={INPUT_PATH}>input</NavLink></span>\r\n            <span><NavLink to={TEXT_PATH}>text</NavLink></span>\r\n            <span><NavLink to={LOGIN_PAGE}>Log in</NavLink></span>\r\n        </WrapperBlock>\r\n    )\r\n}\r\nexport default Header","import React from \"react\";\r\nimport {Routes} from \"./routes/Routes\";\r\nimport Header from \"./header/Header\";\r\n\r\nconst Main: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <Routes/>\r\n        </>\r\n    )\r\n}\r\nexport default Main","type InitialStateType = {}\r\nconst initialState: InitialStateType = {}\r\nconst loginReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    return state\r\n}\r\nexport default loginReducer","type InitialStateType = {}\r\nconst initialState: InitialStateType = {}\r\nconst registrationReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    return state\r\n}\r\nexport default registrationReducer","type InitialStateType = {}\r\nconst initialState: InitialStateType = {}\r\nconst recoveryPassReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    return state\r\n}\r\nexport default recoveryPassReducer","type InitialStateType = {}\r\nconst initialState: InitialStateType = {}\r\nconst newPassReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    return state\r\n}\r\nexport default newPassReducer","type InitialStateType = {}\r\nconst initialState: InitialStateType = {}\r\nconst profileReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    return state\r\n}\r\nexport default profileReducer","import {combineReducers} from \"redux\";\r\nimport loginReducer from \"./a1-loginization/l2-bll/loginReducer\";\r\nimport registrationReducer from \"./a2-registration/r2-bll/regReducer\";\r\nimport recoveryPassReducer from \"./a3-recovery/r2-bll/recoveryPassReducer\";\r\nimport newPassReducer from \"./a4-newPass/n2-bll/newPassReducer\";\r\nimport profileReducer from \"./a5-profile/p2-bll/profileReducer\";\r\n\r\nconst authReducer = combineReducers({\r\n    loginReducer: loginReducer,\r\n    registrationReducer: registrationReducer,\r\n    recoveryPassReducer: recoveryPassReducer,\r\n    newPassReducer: newPassReducer,\r\n    profileReducer: profileReducer\r\n})\r\nexport default authReducer","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport authReducer from \"../../n2-features/f1-auth/authReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    authReducer: authReducer\r\n})\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\nexport default store","import React from 'react';\nimport Main from \"./Main\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"../m2-bll/store\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  text-align: center;\n`\nconst App = () => {\n    return (\n        <Wrapper>\n            <HashRouter>\n                <Provider store={store}>\n                    <Main/>\n                </Provider>\n            </HashRouter>\n        </Wrapper>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}